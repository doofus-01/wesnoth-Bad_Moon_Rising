#textdomain wesnoth-Bad_Moon_Rising

# eventually, this should not be hard-coded for side 1

#define BMR_POOL_DUMMY
    ################################################################
    # this is to suppress the warning spam from lua/Status_Test.lua, if there is no inventory
    ################################################################
    [if]
        [variable]
            name=gear_pool.length
            not_equals=1
        [/variable]
        [then]
            [set_variable]
                name=gear_pool.dummy
                value=0
            [/set_variable]
        [/then]
    [/if]
    ################################################################
#enddef

# a little status icon to say that a unit has equipment (of any sort)
#define BMR_INIT_LUA_ICON
    [event]
        name=preload
        first_time_only=no
        [lua]
            code=<<
            local _ = wesnoth.textdomain "wesnoth-Bad_Moon_Rising"
            local old_unit_status = wesnoth.theme_items.unit_status
            function wesnoth.theme_items.unit_status()
                local u = wesnoth.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
		if u.variables.gear then		    
                    table.insert(s, { "element", {
                        image = "misc/pack.png",
                        tooltip = _"This unit has equipment."
                    } })
                end
                return s
            end
        >>
        [/lua]
        [set_variable]
            name=bmr_gear_lua_tooltip
            value=fired
        [/set_variable]
    [/event]
#enddef

# trying to show the number of recruits available
#define BMR_INIT_LUA_RECRUIT_NUMBERS
    [event]
        name=preload
        first_time_only=no
        [lua]
            code=<<
            local _ = wesnoth.textdomain "wesnoth-Bad_Moon_Rising"
            local old_num_units = wesnoth.theme_items.num_units
            function wesnoth.theme_items.num_units()
                local m_r = wesnoth.get_variable("side1_male_recruits")
		if m_r then
		else
		    m_r = 0
		end
                local f_r = wesnoth.get_variable("side1_female_recruits")
		if f_r then
		else
		    f_r = 0
		end
                local d_r = wesnoth.get_variable("side1_dog_recruits")
		if d_r then
		else
		    d_r = 0
		end
--                if not (m_r or f_r or d_r) then return {} end
                local nu = old_num_units()
--		if (m_r > 0) or (f_r > 0) or (d_r > 0) then		    
		    local rec_st = string.format("%d male recruits, %d female recruits, %d canine recruits", m_r, f_r, d_r)
                    table.insert(nu, { "element", {
                        image = "misc/recruits.png",
                        tooltip = rec_st
                    } })
--                end
                return nu
            end
        >>
        [/lua]
        [set_variable]
            name=bmr_recruit_lua_tooltip
            value=fired
        [/set_variable]
    [/event]
#enddef


#define BMR_INIT_LUA_PRESTART

    [lua]
        code = <<
        wesnoth.dofile("~add-ons/Bad_Moon_Rising/lua/main.lua")
>>
    [/lua]

    [event]
        name=prestart
        {BMR_POOL_DUMMY}
        [if]
            [have_unit]
                # only side 1 is on worldmap, so side=1 is OK here, but not for status menu
                side=1
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        side=1
                        [not]
                            [filter_wml]
                                [variables]
                                    on_call=yes
                                [/variables]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    variable=init_on_call
                    kill=no
                [/store_unit]
                {FOREACH init_on_call iioc}
                    [set_variable]
                        name=init_on_call[$iioc].variables.on_call
                        value=no
                    [/set_variable]
                    [unstore_unit]
                        variable=init_on_call[$iioc]
                        find_vacant=no
                    [/unstore_unit]
                {NEXT iioc}
                {CLEAR_VARIABLE init_on_call}
            [/then]
        [/if]
        [set_menu_item]
            description = _ "Unit Status"
            id = "inventory_item"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    side=$side_number
                [/have_unit]
            [/show_if]
            [command]
                [lua]
                    code= <<
                                local test_dialog2 = Status_test.new()
                        >>
                [/lua]
            [/command]
        [/set_menu_item]
        [if]
            [variable]
                name=total_on_call
                greater_than=0
            [/variable]
            [else]
                [set_variable]
                    name=total_on_call
                    value=0
                [/set_variable]
            [/else]
        [/if]
    [/event]

#enddef

#define BMR_INIT_WML_MOVETO

    [event]
        name=moveto
        first_time_only=no
        [filter]
            #           side=1
            [filter_side]
                controller=human
            [/filter_side]
            [filter_location]
                find_in=gear_map_items
            [/filter_location]
        [/filter]
        {FOREACH gear_map_items mi}
            [if]
                [variable]
                    name=gear_map_items[$mi].x
                    equals=$x1
                [/variable]
                [variable]
                    name=gear_map_items[$mi].y
                    equals=$y1
                [/variable]
                [then]
                    [apply_gear]
                        id = $unit.id
                        gear_id = $gear_map_items[$mi].id
                    [/apply_gear]
                    # might need to re-think this
                    [set_variable]
                        name=mi
                        value=$gear_map_items.length
                    [/set_variable]
                    [floating_text]
                        x,y=$x1,$y1
                        text="<span color='#99aaaa'>" + _ "Takes item..." + "</span>"
                    [/floating_text]
                [/then]
            [/if]
        {NEXT mi}
    [/event]
    # otherwise, these things carry over between maps, and you get random, invisible items being picked up.
    [event]
        name=victory
        {CLEAR_VARIABLE gear_map_items}
    [/event]

#enddef

# didn't end up using this
#ifdef __UNUSED__
# define BMR_INIT_WML_SHOP_MOVETO

[event]
    name=moveto
    first_time_only=no
    [filter]
        side=1
        [filter_location]
            find_in=gear_map_items
        [/filter_location]
    [/filter]
    {FOREACH gear_map_items mi}
        [if]
            [variable]
                name=gear_map_items[$mi].x
                equals=$x1
            [/variable]
            [variable]
                name=gear_map_items[$mi].y
                equals=$y1
            [/variable]
            [then]
                [apply_gear]
                    id = $unit.id
                    gear_id = $gear_map_items[$mi].id
                [/apply_gear]
                # might need to re-think this
                [set_variable]
                    name=mi
                    value=$gear_map_items.length
                [/set_variable]
                [gold]
                    side=1
                    amount = -$gear_map_items[$mi].cost
                [/gold]
                [floating_text]
                    x,y=$x1,$y1
                    text="<span color='#aa7777'>" + _ "Buys item...-$gear_map_items[$mi].cost| g" + "</span>"
                [/floating_text]
            [/then]
        [/if]
    {NEXT mi}
[/event]

# enddef
#endif

#define BMR_INIT_WML_DIE

    [event]
        name = die
        first_time_only = no
        [filter]
            [filter_wml]
                [variables]
                    [gear]
                    [/gear]
                [/variables]
            [/filter_wml]
        [/filter]
        {FOREACH unit.variables.gear gi}
            [gear_item]
                x,y=$x1,$y1
                gear_id = $unit.variables.gear[$gi].id
            [/gear_item]
        {NEXT gi}
    [/event]

#enddef

#define BMR_INIT_WML_POOL_SWAP
    # problem with this plan is that anything added to invnetory during start, prestart, etc. will disappear

    [event]
        name=side turn end
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        [filter_condition]
            [have_unit]
                side=$side_number
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool_$side_number|.length
                equals=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool
            mode=replace
            to_variable=gear_pool_$side_number|
        [/set_variables]
        {CLEAR_VARIABLE gear_pool_$side_number|}
    [/event]

    [event]
        name=side turn
        first_time_only=no
        {BMR_POOL_DUMMY}
    [/event]


# 20160625 FLAG: this is temporary, to give Ukian Witches in ongoing games the new advancements
# because [transform] doesn't work on recall list, apparently
# there is a similar thing in skirmish.cfg
####################
    [event]
	name=recall
	first_time_only=no
	[filter]
	    side=1
	    type=Ukian Witch
	[/filter]
	[filter_condition]
	    [not]
	        [variable]
		    name=$unit.variation
		    equals=green
	        [/variable]   
	        [or]
		    [variable]
			name=$unit.variation
			equals=black
		    [/variable]   
		[/or]
	    [/not]
	[/filter_condition]
            [transform_unit]
		id=$unit.id
                transform_to=Ukian Witch
            [/transform_unit]
    [/event]
######################
		

    [event]
        name=victory
        # WTF was this for?
        #    [set_variable]
        #	name=side_number_
        #	value=1
        #    [/set_variable]
        [filter_condition]
            [have_unit]
                side=$side_number # does this variable exist now?
                [filter_side]
                    controller=human
                [/filter_side]
            [/have_unit]
            [variable]
                name=gear_pool.length
                equals=1
            [/variable]
            # so the inventory doesn't get wiped out by cut-scenes
            [variable]
                name=turn_number
                greater_than=1
            [/variable]
        [/filter_condition]
        [set_variables]
            name=gear_pool_$side_number|
            mode=replace
            to_variable=gear_pool
        [/set_variables]
        {CLEAR_VARIABLE gear_pool}
    [/event]

#enddef

#define BMR_INIT_SIDE_RECRUIT
# only relevant for side 1, I think
    [event]
	first_time_only=no
	name=recruit
	[filter]
	    side=1
	    type=Ukian Regular, Ukian Runner
	[/filter]
	[set_variable]
	    name=side1_male_recruits
	    add=-1
	[/set_variable]
	[if]
	    [variable]
		name=side1_male_recruits
		less_than_equal_to=0
	    [/variable]
	    [then]
		[disallow_recruit]
		    side=1
		    type=Ukian Regular, Ukian Runner
	        [/disallow_recruit]
	    [/then]
	[/if]
	[floating_text]
	    x,y=$x1,$y1
	    text="<span size='medium' color='#ccddaa'>" "$side1_male_recruits| Male
" + "</span>" + "<span size='x-small' color='#77ccaa'>" + _ "Recruits Remaining" + "</span>"
	[/floating_text]
    [/event]
    [event]
	first_time_only=no
	name=recruit
	[filter]
	    side=1
	    type=Ukian Dog
	[/filter]
	[set_variable]
	    name=side1_dog_recruits
	    add=-1
	[/set_variable]
	[if]
	    [variable]
		name=side1_dog_recruits
		less_than_equal_to=0
	    [/variable]
	    [then]
		[disallow_recruit]
		    side=1
		    type=Ukian Dog
	        [/disallow_recruit]
	    [/then]
	[/if]
	[floating_text]
	    x,y=$x1,$y1
	    text="<span size='medium' color='#ccddaa'>" "$side1_dog_recruits| Canine
" + "</span>" + "<span size='x-small' color='#77ccaa'>" + _ "Recruits Remaining" + "</span>"
	[/floating_text]
    [/event]
    [event]
	first_time_only=no
	name=recruit
	[filter]
	    side=1
	    type=Ukian Archer
	[/filter]
	[set_variable]
	    name=side1_female_recruits
	    add=-1
	[/set_variable]
	[if]
	    [variable]
		name=side1_female_recruits
		less_than_equal_to=0
	    [/variable]
	    [then]
		[disallow_recruit]
		    side=1
		    type=Ukian Archer
	        [/disallow_recruit]
	    [/then]
	[/if]
	[floating_text]
	    x,y=$x1,$y1
	    text="<span size='medium' color='#ccddaa'>" "$side1_female_recruits| Female
" + "</span>" + "<span size='x-small' color='#77ccaa'>" + _ "Recruits Remaining" + "</span>"
	[/floating_text]
    [/event]


    [event]
	first_time_only=no
	name=side 1 turn
	[filter_condition]
	    [have_unit]
		side=1
		[filter_side]
		    controller=human
		[/filter_side]
	    [/have_unit]
	[/filter_condition]
	[if]
	    [variable]
		name=side1_male_recruits
		greater_than=0
	    [/variable]
	    [then]
		[allow_recruit]
		    side=1
		    type=Ukian Regular, Ukian Runner
	        [/allow_recruit]
	    [/then]
	    [else]
		[disallow_recruit]
		    side=1
		    type=Ukian Regular, Ukian Runner
	        [/disallow_recruit]
	    [/else]
	[/if]
	[if]
	    [variable]
		name=side1_female_recruits
		greater_than=0
	    [/variable]
	    [then]
		[allow_recruit]
		    side=1
		    type=Ukian Archer
	        [/allow_recruit]
	    [/then]
	    [else]
		[disallow_recruit]
		    side=1
		    type=Ukian Archer
	        [/disallow_recruit]
	    [/else]
	[/if]
	[if]
	    [variable]
		name=side1_dog_recruits
		greater_than=0
	    [/variable]
	    [then]
		[allow_recruit]
		    side=1
		    type=Ukian Dog
	        [/allow_recruit]
	    [/then]
	    [else]
		[disallow_recruit]
		    side=1
		    type=Ukian Dog
	        [/disallow_recruit]
	    [/else]
	[/if]
    [/event]
#enddef

#define BMR_INIT_RANDOM_GEAR_INTERNAL UNIT_TYPE GEAR_ID CHANCE
    [event]
	name=start
	[store_unit]
	    [filter]
		type={UNIT_TYPE}
		[filter_side]
		    controller=ai
		[/filter_side]
	    [/filter]
	    kill=no
	    variable=unit_add_gear_TEMP
	[/store_unit]
    [for]
        array=unit_add_gear_TEMP
        variable=uag_i
        [do]
	    [set_variable]
		name=chance_gear
		rand=1..{CHANCE}
	    [/set_variable]
	    [if]
		[variable]
		   name=chance_gear
		   equals=1
		[/variable]
		[then]
		    [apply_gear]
			id=$unit_add_gear_TEMP[$uag_i].id
			gear_id={GEAR_ID}
		    [/apply_gear]
		[/then]
	    [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE unit_add_gear_TEMP}
    {CLEAR_VARIABLE chance_gear}
    [/event]

    [event]
	name=recruit
	first_time_only=no
	[filter]
	    type={UNIT_TYPE}
		[filter_side]
		    controller=ai
		[/filter_side]
	[/filter]
		
	[store_unit]
	    [filter]
		id=$unit.id
	    [/filter]
	    kill=no
	    variable=unit_add_gear_TEMP
	[/store_unit]
    [for]
        array=unit_add_gear_TEMP
        variable=uag_i
        [do]
	    [set_variable]
		name=chance_gear
		rand=1..{CHANCE}
	    [/set_variable]
	    [if]
		[variable]
		   name=chance_gear
		   equals=1
		[/variable]
		[then]
		    [apply_gear]
			id=$unit_add_gear_TEMP[$uag_i].id
			gear_id={GEAR_ID}
		    [/apply_gear]
		[/then]
	    [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE unit_add_gear_TEMP}
    {CLEAR_VARIABLE chance_gear}
    [/event]
#enddef

#define BMR_INIT_RANDOM_GEAR
# random gear given to the AI enemy units, throughout the campaign - might want to make this Lua instead?
# undead
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Skeleton,Skeleton Archer,Revenant,Bone Shooter, Banebow, Draug) (rusty_armor) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Banebow, Draug) (bone_helmet) 4}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Walking Corpse, Soulless) (rusty_helmet) 5}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Skeleton, Revenant, Draug) (rusty_axe) 6}
# despair
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master, Phantom Rider, Phantom Horseman, Phantom Slayer) (black_cowl) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master) (black_cloak) 10}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Phantom Cloak, Phantom Shadow, Phantom Master, Phantom Widow, Phantom Midnight, Phantom White, Phantom Banshee, Phantom Rider, Phantom Horseman, Phantom Slayer) (black_tunic) 8}
# orcs
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Orcish Drifter, Orcish Wanderer, Orcish Vagrant, Orcish Traveler) (shaman_tunic) 5}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Orcish Serf, Orcish Foreman, Orcish Fireline) (obsidian_axe) 4}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Orcish Serf, Orcish Foreman, Orcish Slinger, Orcish Hunter) (hide_buckler) 5}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Orcish Grunt, Orcish Serf, Orcish Slinger, Rat Rider, Orcish Archer, Orcish Rider) (leather_armor) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Orcish Foreman, Orcish Hunter, Rat Lancer, Orcish Crossbowman, Orcish Slurbow, Orcish Cavalry, Orcish Destrier) (scale_armor) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Archaic_Goblin, Frost Goblin, Rat Rider, Rat Lancer, Rat Dragoon, Orcish SnowWalker, Orcish IceStalker) (obsidian_spear) 4}
# primeval
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Primevalist Follower, Primevalist Monk, Primevalist Celebrant, Primevalist Prior) (fur_cloak) 4}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Primevalist Follower, Primevalist Monk, Primevalist Celebrant, Primevalist Prior) (steel_ring) 4}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Primevalist Fighter, Primevalist Fanatic, Primevalist Leader, Primevalist Shield, Primevalist Shield_High) (light_helmet) 4}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Primevalist Shield, Primevalist Shield_High) (kite_shield) 5}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Primevalist Fighter, Primevalist Fanatic, Primevalist Leader) (bronze_buckler) 5}
# royalists
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Spearman, Pikeman, Halberdier, Swordsman, Royal Guard) (steel_helmet) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Pikeman, Halberdier, Swordsman, Royal Guard, Northern Soldier, Northern Elite, Dragoon, Cavalier) (scale_armor) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Spearman, Cavalryman) (leather_armor) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Northern Soldier, Northern Elite) (wooden_shield) 5}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Northern Fighter, Spearman, Cavalryman, Pikeman, Halberdier, Swordsman, Royal Guard, Northern Soldier, Northern Elite, Dragoon, Cavalier) (leather_gloves) 8}
#elves
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Elvish Fighter, Elvish Archer, Elvish Ranger, Elvish Hero, Elvish Captain, Elvish Champion, Elvish Marshal, Elvish Marksman, Elvish Sharpshooter, Elvish Avenger) (elf_cloak) 6}
    {BMR_INIT_RANDOM_GEAR_INTERNAL (Elvish Fighter, Elvish Archer, Elvish Ranger, Elvish Hero, Elvish Captain, Elvish Champion, Elvish Marshal, Elvish Marksman, Elvish Sharpshooter, Elvish Avenger) (elven_tunic) 6}

#enddef



#define BMR_INIT_LUA

    {BMR_INIT_LUA_ICON}
    {BMR_INIT_LUA_RECRUIT_NUMBERS}
    {BMR_INIT_LUA_PRESTART}
    {BMR_INIT_WML_POOL_SWAP}
    {BMR_INIT_WML_MOVETO}
    {BMR_INIT_WML_DIE}
    {BMR_INIT_SIDE_RECRUIT}
    {BMR_INIT_RANDOM_GEAR}

#enddef

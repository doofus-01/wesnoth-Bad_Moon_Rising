#textdomain wesnoth-Bad_Moon_Rising

# This file contains macros used in the worldmap scenarios.  (Plus whatever else I put in here for no good reason.)

#define BMR_MAP_STAGE NUM
    # sets a variable in worldmap scenario prestart events
    # should be compatible with campaigns already in progress

    [if]
        [variable]
            name=bmr_map_stage
            equals={NUM}
        [/variable]
        [else]
            [set_variable]
                name=bmr_map_stage
                value={NUM}
            [/set_variable]
        [/else]
    [/if]
#enddef

#define BMR_SHOP_FLAG X Y
    [item]
        x,y={X},{Y}
        halo=flags/long-flag-[1~4].png~RC(flag_green>black):150
    [/item]

#enddef

#define XYSAVE2 NAME VARIABLE
    # this stores the worldmap coordinates of a unit that will be in play on the next scenario
   # this is stupid and should probably be removed...
    [store_unit]
        [filter]
            id={NAME}
        [/filter]
        variable={VARIABLE}
        kill=no
    [/store_unit]
    [set_variable]
        name={VARIABLE}_x
        value=${VARIABLE}.x
    [/set_variable]
    [set_variable]
        name={VARIABLE}_y
        value=${VARIABLE}.y
    [/set_variable]
    # was this really needed?
    #    [unstore_unit]
    #        variable={VARIABLE}
    #    [/unstore_unit]
    # this is probably the best place to clear this variable, so the menu item only works on world map scenarios
    # actually, this may not be the best place, WORLDMAP may be better...
    #			{CLEAR_VARIABLE map_temp}

#enddef

#define XYSAVE3 SIDE VARIABLE
    # this stores the position of units that will not be seen until we return to the worldmap scenario
    [store_unit]
        [filter]
            side={SIDE}
        [/filter]
        variable={VARIABLE}
        kill=no
    [/store_unit]
    # also need to store villages so the AI doesn't keep going after that
    [store_villages]
        variable=WM_villages
        x=1-93 # want all of them stored
    [/store_villages]
#enddef

#define WORLDMAP

    theme=Theme_Minimal

    ##########################################################################
    # 20150503 - adding in support of new Lua "On-Call" menu, to replace the Camp scenarios
    ##########################################################################

    # this will need to be placed in other places as well, can it just go at campaign top-level, or something?
    [lua]
        code = <<
        wesnoth.dofile("~add-ons/Bad_Moon_Rising/lua/main.lua")
	>>
    [/lua]

    [event]
        name=prestart
        [store_unit]
            [filter]
                [not]
                    [filter_wml]
                        [status]
                            dummy=yes
                        [/status]
                    [/filter_wml]
                [/not]
            [/filter]
            variable=init_stat
            kill=no
        [/store_unit]
        {FOREACH init_stat iioc}
            [set_variable]
                name=init_stat[$iioc].status.dummy
                value=yes
            [/set_variable]
            [unstore_unit]
                variable=init_stat[$iioc]
                find_vacant=no
            [/unstore_unit]
        {NEXT iioc}
        {CLEAR_VARIABLE init_stat}
        [store_unit]
            [filter]
#                side=1
                [not]
                    [filter_wml]
                        [variables]
                            on_call=yes
                        [/variables]
                    [/filter_wml]
                [/not]
            [/filter]
            variable=init_on_call
            kill=no
        [/store_unit]
        {FOREACH init_on_call iioc}
            [set_variable]
                name=init_on_call[$iioc].variables.on_call
                value=no
            [/set_variable]
            [unstore_unit]
                variable=init_on_call[$iioc]
                find_vacant=no
            [/unstore_unit]
        {NEXT iioc}
        {CLEAR_VARIABLE init_on_call}
#        [clear_menu_item]
#            id=bmr_crew
#        [/clear_menu_item]
        {BMR_UNIT_MARKER_MENU 1}
    [/event]

    [event]
        name=start
        [set_menu_item]
            id=bmr_crew_two
            description= _ "Marching Formation"
            # filter so that this only shows up on worldmap
            [show_if]
                [have_location]
                    x,y=100,75
                    terrain=Gs^Fp
                [/have_location]
            [/show_if]
            [filter_location]
                x,y=1-100,1-75
            [/filter_location]
            [command]
                [lua]
                    code= <<
                                local test_dialog = Gui_recall.new()
                        >>
                [/lua]
            [/command]
        [/set_menu_item]
        [if]
            [variable]
                name=total_on_call
                greater_than=0
            [/variable]
            [else]
                [set_variable]
                    name=total_on_call
                    value=0
                [/set_variable]
            [/else]
        [/if]
    [/event]

    ###########################################################################

    [event]
        name=start
        # re-creating the BMR_POOL_DUMMY thing, to suppress the warning spam
        [if]
            [variable]
                name=gear_pool.length
                not_equals=1
            [/variable]
            [then]
                [set_variable]
                    name=gear_pool.dummy
                    value=0
                [/set_variable]
            [/then]
        [/if]
        {SET_LABEL 93 3 (_ "Mount Wynn")}
        {SET_LABEL 3 31 (_ "White-Tooth Peaks")}
        {SET_LABEL 28 40 (_ "Mount Tien")}
        {SET_LABEL 52 58 (_ "Mirror Pond")}
        {SET_LABEL 50 3 (_ "Fort Kuhle")}
        {SET_LABEL 40 18 (_ "Western Range")}
        {SET_LABEL 76 29 (_ "Central Ukiah")}
        {SET_LABEL 97 7 (_ "Gornath")}
        {SET_LABEL 88 12 (_ "Korkath")}
        {SET_LABEL 53 31 (_ "Copper Mine")}
        {SET_LABEL 52 13 (_ "Colgana")}
        {SET_LABEL 58 21 (_ "Dathnes Fork")}
        {SET_LABEL 73 58 (_ "Southern Pass")}
        {SET_LABEL 11 22 (_ "Great White Dunes")}
        {SET_LABEL 17 58 (_ "Elf Land")}
        {SET_LABEL 28 15 (_ "Heaven's Gate")}
        {SET_LABEL 64 43 (_ "Betonas Fork")}
        {SET_LABEL 68 69 (_ "Elf Land")}
        {SET_LABEL 21 5 (_ "Volcano")}
        {SET_LABEL 83 2 (_ "Northern Range")}
        {SET_LABEL 38 25 (_"Checkpoint")}
        {PLACE_IMAGE "scenery/mine-abandoned.png" 53 32}
        {PLACE_IMAGE "scenery/temple1.png" 28 41}
        {PLACE_IMAGE "items/orcish-flag.png" 18 34}
        {PLACE_IMAGE "items/orcish-flag.png" 39 26}
        {PLACE_IMAGE "scenery/tent-fancy-red.png" 37 51}
        {PLACE_IMAGE "scenery/mine-abandoned.png" 39 24}
        ###################################
        # restoring village ownership #######
        [if]
            [variable]
                name=WM_villages.length
                greater_than=0
            [/variable]
	    [then]
	        [set_variable]
	            name=WM_villages_index
	            value=0
	        [/set_variable]
	        [while]
	            [variable]
	                name=WM_villages_index
	                less_than=$WM_villages.length
	            [/variable]
	            [do]
	                [capture_village]
	                    side=$WM_villages[$WM_villages_index].owner_side
	                    x=$WM_villages[$WM_villages_index].x
	                    y=$WM_villages[$WM_villages_index].y
	                [/capture_village]
	                [set_variable]
	                    name=WM_villages_index
	                    add=1
	                [/set_variable]
	            [/do]
	        [/while]
	    [/then]
        [/if]
        {CLEAR_VARIABLE WM_villages}
        {CLEAR_VARIABLE WM_villages_index}
        ###############################
        # movement is zero upon returning to worldmap, end turn automatically
        [store_unit]
            [filter]
                canrecruit=yes
                [filter_side]
                    controller=human
                [/filter_side]
            [/filter]
            variable=wmap_unit
            kill=no
        [/store_unit]
        [if]
            [variable]
                name=wmap_unit.moves
                equals=0
            [/variable]
            [then]
                [end_turn]
                [/end_turn]
            [/then]
        [/if]
        {CLEAR_VARIABLE wmap_unit}
	##############################
	# 20180903 - Ukian castle is detroyed in part 3
#ifdef CAMPAIGN_BAD_MOON_RISING_III
	[terrain]
	    x,y=76,31
	    terrain=Khr
	[/terrain]
	[terrain]
	    x,y=75,31-32
	    terrain=Chr
	[/terrain]
	[terrain]
	    x,y=73,34
	    terrain=Chr
	[/terrain]
	[item]
	    image=scenery/castle-ruins.png
	    x,y=75,33
	[/item]
	[item]
	    image=scenery/trash.png
	    x,y=77,31
	[/item]
#endif
	##############################

        ##############################
        # 20140706
        # the castle at mirror pond has sunk
        [if]
            [variable]
                name=despair_gift
                equals=1
            [/variable]
            [then]
                [terrain]
                    terrain=Wwg
                    x,y=53,58
                [/terrain]
            [/then]
        [/if]
        ###########################
    [/event]

    # this may be the best place
    #    [event]
    #        name=victory
    #        {CLEAR_VARIABLE map_temp}
    #    [/event]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
	    [not]
            [filter_adjacent]
                side=2
            [/filter_adjacent]	    
	    [/not]
        [/filter]
        [if]
            [variable]
                name=unit.moves
                equals=0
            [/variable]
            [then]
                [end_turn]
                [/end_turn]
            [/then]
        [/if]
    [/event]

#enddef

# 20150503 - I think I can retire this, and the "Camp" sccenario below.  Using Lua and GUI2 instead.  The stuff inserted into WORLDMAP macro immediately above this are in support of that.
#define BMR_MENU_CAMP HERO SCENARIO_INDEX
#enddef

#define BMR_MENU_CAMP_old HERO SCENARIO_INDEX
    # # define BMR_MENU_CAMP HERO OTHER1 SCENARIO_INDEX
    [event]
        name=start
        # this tag does not work...
        # no, it works, it's just that the menu item persists outside of the scenarios that have this start event,
        # so the variable is always checked, even if this sttart event doesn't exist.
        #        [store_map_dimensions]
        #            variable=map_temp
        #        [/store_map_dimensions]
        [set_menu_item]
            id=bmr_crew
            description= _ "Marching Formation"
            [show_if]
                # use a [have_location] filter instead
                #                [variable]
                #                    name=map_temp.width
                #                    numerical_equals=100
                #                [/variable]
                [have_location]
                    x,y=100,75
                    terrain=Gs^Fp
                [/have_location]
            [/show_if]
            [filter_location]
                x,y=1-100,1-75
            [/filter_location]
            [command]
                {XYSAVE2 {HERO} hero}
                {XYSAVE3 2 other1}
                [store_unit]
                    [filter]
                        id={HERO}
                    [/filter]
                    variable=wm_player
                    kill=no
                [/store_unit]
                [set_variable]
                    name=wm_playermoves
                    value=$wm_player.moves
                [/set_variable]
                {CLEAR_VARIABLE wm_player}
                [endlevel]
                    next_scenario=zz_camp_{SCENARIO_INDEX}
                    {CONTINUE_NO_SAVE}
                [/endlevel]
            [/command]
        [/set_menu_item]
        #	{CLEAR_VARIABLE map_temp}
    [/event]
#enddef

###########################################################################################
# this is a b.s. scenario, so I'm placing it here instead of /scenarios2 and /scenarios3
# and it does not work if not a macro
# side 1 id is important after all...

#define BMR_CAMP_SCENARIO ID INDEX WORLD_SCENARIO
    [scenario]
        id="zz_camp_{INDEX}"
        name= _ "Reconfiguration"
        map_data="{~add-ons/Bad_Moon_Rising/maps/zz_camp.map}"
        # variable substitution does not work here.  Oh well....
        victory_when_enemies_defeated=no
        next_scenario={WORLD_SCENARIO}
        {TURNS 1 1 1}
        [music]
            name="traveling_minstrels.ogg"
        [/music]

        #        {BMR_DAYSHORT}

        [side]
            type=Ukian Commander
            id={ID}
            #        name= _ "Lorenzon"
            #        profile=portraits/lorenzon.png
            side=1
            canrecruit=yes
            controller=human
            fog=no
            #        recruit=Ukian Runner, Ukian Regular, Ukian Archer, Ukian Dog
            #        {GOLD 200 150 100}
            team_name=good
            save_id=Lorenzon
            suppress_end_turn_confirmation=yes
            recall_cost=0
        [/side]

        [event]
            name=prestart
            [objectives]
                side=1
                [objective]
                    condition=win
                    description=_ "End of Turn"
                [/objective]
                note= _ "Recruit or recall the units that will be present in the skirmish scenarios. Recalls are free, recruits are not."
            [/objectives]
            [item]
                image=scenery/pine1.png
                x,y=3,6
            [/item]
            [item]
                image=scenery/snowbits.png
                x,y=9,9
            [/item]
            # this is to remove the old crew from the list
            [store_unit]
                [filter]
                    side=1
                    x,y=recall,recall
                [/filter]
                variable=old_crew
                kill=yes
            [/store_unit]
            {FOREACH old_crew crew_i}
                [set_variable]
                    name=old_crew[$crew_i].variables.on_call
                    value=no
                [/set_variable]
                [unstore_unit]
                    variable=old_crew[$crew_i]
                    find_vacant=no
                [/unstore_unit]
            {NEXT crew_i}
            {CLEAR_VARIABLE old_crew}
            # not sure this is really the best place for it, but for enabling it mid-campaign, this isn't bad.
            {BMR_UNIT_MARKER_MENU 1}
        [/event]

        [event]
            name=recruit
            first_time_only=no
            [filter]
                side=1
            [/filter]
            [store_unit]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                variable=temp_mod
                kill=yes
            [/store_unit]
            [set_variable]
                name=temp_mod.variables.on_call
                value=yes
            [/set_variable]
            [unstore_unit]
                variable=temp_mod
                find_vacant=no
            [/unstore_unit]
            #	[message]
            #	speaker=narrator
            #	message= _ "Is $temp_mod.name| on call?  $temp_mod.variables.on_call"
            #	[/message]
            {CLEAR_VARIABLE temp_mod}
        [/event]

        [event]
            name=recall
            first_time_only=no
            [filter]
                side=1
            [/filter]
            [store_unit]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                variable=temp_mod
                kill=yes
            [/store_unit]
            [set_variable]
                name=temp_mod.variables.on_call
                value=yes
            [/set_variable]
            [unstore_unit]
                variable=temp_mod
                find_vacant=no
            [/unstore_unit]
            #	[message]
            #	speaker=narrator
            #	message= _ "Is $temp_mod.name| on call?  $temp_mod.variables.on_call"
            #	[/message]
            {CLEAR_VARIABLE temp_mod}
            # v 1.1.3 I thought this was done already, there may be some broken code somewhere...
            # if we can change  recall cost to zero, wedo not need this.
            #            [gold]
            #                side=1
            #                amount=20
            #            [/gold]
        [/event]

        [event]
            name=time over
            [endlevel]
                {CONTINUE_NO_SAVE}
            [/endlevel]
        [/event]
    [/scenario]
#enddef
#########################################################################################################3

#define BMR_WORLMAP_LURKER_AI
        [micro_ai]
            side=2
#            ai_type=lurkers
            ai_type=zone_guardian
            action=add

            [filter]
                side=2
            [/filter]
            [filter_location]
                terrain=Ww^B*,Re,Ai
            [/filter_location]
#            [filter_location_wander]
#                terrain=Ww^B*,Re,Ai,Aa
#            [/filter_location_wander]
        [/micro_ai]
#enddef

#define BMR_WORLDMAP_AI
    [ai]
        aggression=1.0
        village_value=0
    [/ai]
#enddef

#define BMR_SK_SET_TOD
    ##############
    # 20140706 storing time of day, will determine the schedule of the skirmish scenario
    # not sure this is the most efficient way to do this, but it seems to work
    {CLEAR_VARIABLE bmr_sk_tod}
    [store_time_of_day]
        #	variable=time
    [/store_time_of_day]
    [set_variable]
        name=bmr_sk_tod.time.id
        value=$time_of_day.id
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.name
        value=$time_of_day.name
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.red
        value=$time_of_day.red
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.green
        value=$time_of_day.green
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.blue
        value=$time_of_day.blue
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.image
        value=$time_of_day.image
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.mask
        value=$time_of_day.mask
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.sound
        value=$time_of_day.sound
    [/set_variable]
    [set_variable]
        name=bmr_sk_tod.time.lawful_bonus
        value=$time_of_day.lawful_bonus
    [/set_variable]
    {CLEAR_VARIABLE time_of_day}
    ###################
#enddef


#define CAUGHT HERO SCENARIO
    {XYSAVE2 {HERO} hero}
    {XYSAVE3 2 other1}
    [set_variable]
        name=timesfought
        add=1
    [/set_variable]
    [music]
        name=northerners-classic.ogg
        immediate=yes
        append=no
    [/music]
    {THUNDER(
        #			[message]
        #			speaker=narrator
        #			message= "$timesfought"
        #			[/message]
    )}
    {BMR_SK_SET_TOD}
    [endlevel]
        next_scenario={SCENARIO}
        #			result=continue_no_save
        # Has this been defined yet?
        {CONTINUE_NO_SAVE}
        music=northerners-classic.ogg
    [/endlevel]
#enddef

#define BMR_SKIRMISH_CALL_EVENT TERRAIN CHANCE HERO TYPE LEVEL
    # # define BMR_SKIRMISH_CALL_EVENT TERRAIN CHANCE HERO OTHER1 TYPE LEVEL
    [event]
        name=enter_hex
        first_time_only=no
        [filter]
            id={HERO}
            [filter_location]
                terrain={TERRAIN}
            [/filter_location]
            # to keep skirmishes from happening when Battle should be happening.
            [not]
                [filter_adjacent]
                    side=2
                [/filter_adjacent]
            [/not]
        [/filter]
        # v1.5.3 - changing this from 1..3 to 1..4, it does get a bit annoying
        # at some point, this should be moved to where it depends on the terrain type, so woods are more likely, roads less
        # can do manually with adding CHANCE
        [set_variable]
            name=caught
            rand=1..{CHANCE}
        [/set_variable]
        # so that the player doesn't get attacked after one single step
        [if]
            [variable]
                name=free_pass
                equals=1
            [/variable]
            [then]
                [set_variable]
                    name=caught
                    value=2
                [/set_variable]
                [set_variable]
                    name=free_pass
                    value=0
                [/set_variable]
            [/then]
        [/if]
        [if]
            [variable]
                name=caught
                numerical_equals=1
            [/variable]
            [then]
		[cancel_action]
		[/cancel_action]
                [set_variable]
                    name=free_pass
                    value=1
                [/set_variable]
                [set_variable]
                    name=wm_playermoves
                    value=$unit.moves
                [/set_variable]
#                {CAUGHT {HERO} Hills4}
#                {CAUGHT {HERO} "Hills1"}
                {CAUGHT {HERO} "{TYPE}{LEVEL}"}
                #                {CAUGHT {HERO} {OTHER1} "{TYPE}{LEVEL}"}
            [/then]
            [else]
                [allow_undo][/allow_undo]
            [/else]
        [/if]
    [/event]
#enddef

#define OFFROAD HERO LEVEL
    # # define OFFROAD HERO OTHER1 LEVEL
    # 11-18-2012: applying some TotSS worldmap features, such as enter_hex
    # moving events to the macro above
    ##################################
    # this is to make the player unable to reliably skate by Cavalry with skirmishes
    #    [event]
    #        name=moveto
    #        first_time_only=no
    #        [filter]
    #            id={HERO}
    #            x,y=1-100,1-75
    #        [/filter]
    #        {MODIFY_UNIT (id={HERO}) moves 0}
    #    [/event]

    #    {BMR_SKIRMISH_CALL_EVENT Aa 6 {HERO} {OTHER1} Snow {LEVEL}}
    {BMR_SKIRMISH_CALL_EVENT Aa 6 {HERO} Snow {LEVEL}}
    {BMR_SKIRMISH_CALL_EVENT Aa^Fpa 2 {HERO} Woods {LEVEL}}
    {BMR_SKIRMISH_CALL_EVENT Ha 4 {HERO} Hills {LEVEL}}
    # the huricdead thing ...    {BMR_SKIRMISH_CALL_EVENT Re {HERO} {OTHER1} Astreya {LEVEL}}

    # Making an entry for Astreya attacking them on the road.
    # It should only happen if Huric is dead (huricdead=1).

    [event]
        name=enter_hex
        first_time_only=no
        [filter]
            id={HERO}
            [filter_location]
                terrain=Re
            [/filter_location]
        [/filter]
        [set_variable]
            name=caught
            #            rand=1..12
            rand=1..6
        [/set_variable]
        [if]
            [variable]
                name=free_pass
                equals=1
            [/variable]
            [then]
                [set_variable]
                    name=caught
                    value=2
                [/set_variable]
                [set_variable]
                    name=free_pass
                    value=0
                [/set_variable]
            [/then]
        [/if]
        [if]
            [variable]
                name=caught
                numerical_equals=1
            [/variable]
            [then]
                [if]
                    [variable]
                        name=huricdead
                        numerical_equals=1
                    [/variable]
                    [then]
                        [set_variable]
                            name=free_pass
                            value=1
                        [/set_variable]
                        [set_variable]
                            name=wm_playermoves
                            value=$unit.moves
                        [/set_variable]
			[cancel_action]
			[/cancel_action]
                        {CAUGHT {HERO} Astreya{LEVEL}}
                    [/then]
                    [else]
                        [allow_undo][/allow_undo]
                    [/else]
                [/if]
            [/then]
            [else]
                [allow_undo][/allow_undo]
            [/else]
        [/if]
        # road, no ghosts.  Remember to put in skirmish calls in scenarios2 & 3
#ifdef __UNUSED__
        [if]
            [variable]
                name=caught
                numerical_equals=10
            [/variable]
            [then]
                [set_variable]
                    name=free_pass
                    value=1
                [/set_variable]
                [set_variable]
                    name=wm_playermoves
                    value=$unit.moves
                [/set_variable]
                {CAUGHT {HERO} Road{LEVEL}}
            [/then]
            [else]
                [allow_undo][/allow_undo]
            [/else]
        [/if]
#endif
    [/event]

#enddef

#define MAP_INIT HERO
    # # define MAP_INIT HERO OTHER1

    [event]
        name=prestart
        [if]
            [variable]
                # be sure to clear this
                # hero_x was defined in XYSAVE macro, different from hero.x
                name=beenhere
                equals=yes
            [/variable]
            # unstore the hero and other1 where they were before endlevel
            [then]
                [store_unit]
                    [filter]
                        id={HERO}
                    [/filter]
                    variable=hero
                    kill=yes
                [/store_unit]
                # 11-19-2012: Why is this commented out?
                #        [store_unit]
                #            [filter]
                #            id={OTHER1}
                #            [/filter]
                #            variable=other1
                #            kill=yes
                #        [/store_unit]
                # 11-18-2012 : Adding this so the skirmishes don't allow player to sneak by enemies with skirmishes
                [set_variable]
                    name=hero.moves
                    value=$wm_playermoves
                [/set_variable]
                [set_variable]
                    name=hero.x
                    value=$hero_x
                [/set_variable]
                [set_variable]
                    name=hero.y
                    value=$hero_y
                [/set_variable]
                #                [set_variable]
                #                    name=other1.x
                #                    value=$other1_x
                #                [/set_variable]
                #                [set_variable]
                #                    name=other1.y
                #                    value=$other1_y
                #                [/set_variable]
                # so that the enemy cavalry doesn't lose a turn
                #                [set_variable]
                #                    name=other1.moves
                #                    value=$other1.max_moves
                #                [/set_variable]
                [unstore_unit]
                    variable=hero
                [/unstore_unit]
                #                [unstore_unit]
                #                    variable=other1
                #                [/unstore_unit]
                [kill]
                    side=2
                [/kill]
                {FOREACH other1 other1_i}
                    [set_variable]
                        name=other1[$other1_i].moves
                        value=$other1[$other1_i].max_moves
                    [/set_variable]

                    [unstore_unit]
                        variable=other1[$other1_i]
                        find_vacant=no
                    [/unstore_unit]
                    [if]
                        [variable]
                            name=bmr_battle_unit_id
                            equals=$other1[$other1_i].id
                        [/variable]
                        [then]
                            [kill]
                                id=$bmr_battle_unit_id
                            [/kill]
                            {CLEAR_VARIABLE bmr_battle_unit_id}
                        [/then]
                    [/if]
                {NEXT other1_i}
                {CLEAR_VARIABLE hero}
                {CLEAR_VARIABLE other1}
                {CLEAR_VARIABLE other1_i}
            [/then]
            [else]
                [set_variable]
                    # We do not need to go through this initialization again
                    name=beenhere
                    value=yes
                [/set_variable]
                # These variables are so that you don't repeat scenarios
                [set_variable]
                    name=beencp1
                    value=no
                [/set_variable]
                [set_variable]
                    name=beencp2
                    value=no
                [/set_variable]
                [set_variable]
                    name=beencp3
                    value=no
                [/set_variable]
                [set_variable]
                    name=beencp4
                    value=no
                [/set_variable]
            [/else]
        [/if]
        [capture_village]
            side=1
            terrain=*^V*
            [and]
                [filter]
                    side=1
                [/filter]
            [/and]
        [/capture_village]
        [capture_village]
            side=2
            terrain=*^V*
            [and]
                [filter]
                    side=2
                [/filter]
            [/and]
        [/capture_village]
    [/event]
#enddef

#define BMR_MAP_BATTLE ID1 ID2 TALK SCENARIO

    [event]
        name=moveto
        [filter]
            id={ID2}
            [filter_adjacent]
                id={ID1}
            [/filter_adjacent]
        [/filter]
        [message]
            speaker={ID1}
            message={TALK}
        [/message]
        {XYSAVE2 {ID1} hero}
        {XYSAVE3 2 other1}
        # this gets cleared if the player flees, but stays if not,
        # so that if the player defeats the battle leader, this unit is removed from map
        [set_variable]
            name=bmr_battle_unit_id
            value=$unit.id
        [/set_variable]
        # this variable is used in BMR_SIDE_FIRST macro, which is defined in skirmishes.cfg and used in Battles.cfg
        [set_variable]
            name=bmr_battle_ambushed
            value=yes
        [/set_variable]
        {BMR_SK_SET_TOD}
        [endlevel]
            next_scenario={SCENARIO}
            {CONTINUE}
            replay_save=no
        [/endlevel]
    [/event]

    [event]
#        name=moveto
# changing this to attack since it is possible to break events if you, say, move onto a end_level-triggering village that has an enemy adjacent.
# need to also change end_turn action (in WORLDMAP macro) when player moves=0, otherwise player can never trigger this
        name=attack
        [filter]
            id={ID1}
            [filter_adjacent]
                id={ID2}
            [/filter_adjacent]
        [/filter]
        [message]
            speaker={ID1}
            message= _ "Attack!"
        [/message]
        {XYSAVE2 {ID1} hero}
        {XYSAVE3 2 other1}
        # this gets cleared if the player flees, but stays if not,
        # so that if the player defeats the battle leader, this unit is removed from map
	# kill the unit to stop the fighting, since the endlevel stuff only seems to happen after the attack event
	[kill]
	    id={ID2}
	    animate=no
	[/kill]
        [set_variable]
            name=bmr_battle_unit_id
            value={ID2}
        [/set_variable]
        [set_variable]
            name=bmr_battle_ambushed
            value=no
        [/set_variable]
        {BMR_SK_SET_TOD}
        [endlevel]
            next_scenario={SCENARIO}
            {CONTINUE}
            replay_save=no
        [/endlevel]
    [/event]

#enddef

# I think this can be deleted
#define BMR_MAPKILL ID1 ID2

    [event]
        name=attack
        # so, this event sometimes doesn't fire, will this fix that?
        first_time_only=no
        [filter]
            id={ID1}
        [/filter]
        [filter_second]
            id={ID2}
        [/filter_second]
        [message]
            speaker={ID2}
            message= _"We've been caught!"
        [/message]
        [store_unit]
            [filter]
                id={ID2}
            [/filter]
            kill=no
            variable=killed_temp
        [/store_unit]
        [set_variable]
            name=killed_temp.hitpoints
            value=1
        [/set_variable]
        [unstore_unit]
            variable=killed_temp
            findvacant=no
        [/unstore_unit]

        # for the attack - defense should not matter
        {FOREACH unit.attack i}
            [set_variables]
                name=unit.attack[$i].specials.chance_to_hit

                [value]
                    id=forced_cth
                    value=100
                    cumulative=no
                [/value]
            [/set_variables]
        {NEXT i}
        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]

#enddef
